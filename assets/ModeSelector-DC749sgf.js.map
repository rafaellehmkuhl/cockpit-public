{"version":3,"file":"ModeSelector-DC749sgf.js","sources":["../../src/components/mini-widgets/ModeSelector.vue"],"sourcesContent":["<template>\n  <div>\n    <Dropdown v-model=\"currentMode\" :options=\"vehicleStore.modesAvailable()\" class=\"min-w-[128px]\" />\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { onMounted, onUnmounted, ref, watch } from 'vue'\n\nimport { datalogger, DatalogVariable } from '@/libs/sensors-logging'\nimport { useMainVehicleStore } from '@/stores/mainVehicle'\n\nimport Dropdown from '../Dropdown.vue'\n\ndatalogger.registerUsage(DatalogVariable.mode)\nconst vehicleStore = useMainVehicleStore()\nconst currentMode = ref()\n\nwatch(currentMode, (newVal) => {\n  if (currentMode.value === undefined) return\n  // Fetch the current mode directly from the store to ensure it's different\n  if (newVal === vehicleStore.mode) {\n    console.log('New mode is the same as the current one. No mode-change commands will be issued.')\n    return\n  }\n  vehicleStore.setFlightMode(currentMode.value)\n})\n\n// eslint-disable-next-line no-undef\nlet modeUpdateInterval: NodeJS.Timer | undefined = undefined\nonMounted(() => (modeUpdateInterval = setInterval(() => (currentMode.value = vehicleStore.mode), 500)))\nonUnmounted(() => clearInterval(modeUpdateInterval))\n</script>\n"],"names":["datalogger","DatalogVariable","vehicleStore","useMainVehicleStore","currentMode","ref","watch","newVal","modeUpdateInterval","onMounted","onUnmounted"],"mappings":"geAcWA,EAAA,cAAcC,EAAgB,IAAI,EAC7C,MAAMC,EAAeC,IACfC,EAAcC,IAEdC,EAAAF,EAAcG,GAAW,CAC7B,GAAIH,EAAY,QAAU,OAEtB,IAAAG,IAAWL,EAAa,KAAM,CAChC,QAAQ,IAAI,kFAAkF,EAC9F,MACF,CACaA,EAAA,cAAcE,EAAY,KAAK,EAAA,CAC7C,EAGD,IAAII,EACM,OAAAC,EAAA,IAAOD,EAAqB,YAAY,IAAOJ,EAAY,MAAQF,EAAa,KAAO,GAAG,CAAE,EAC1FQ,EAAA,IAAM,cAAcF,CAAkB,CAAC"}