{"version":3,"file":"Alerter-CRqkY9wT.js","sources":["../../src/stores/vehicleAlerter.ts","../../src/components/mini-widgets/Alerter.vue"],"sourcesContent":["import { defineStore } from 'pinia'\nimport { watch } from 'vue'\n\nimport { useAlertStore } from '@/stores/alert'\nimport { useMainVehicleStore } from '@/stores/mainVehicle'\nimport { Alert, AlertLevel } from '@/types/alert'\n\nexport const useVehicleAlerterStore = defineStore('vehicle-alerter', () => {\n  const vehicleStore = useMainVehicleStore()\n  const alertStore = useAlertStore()\n\n  watch(vehicleStore.statusText, () => {\n    if (!vehicleStore.statusText.text) return\n    alertStore.pushAlert(new Alert(vehicleStore.statusText.severity, vehicleStore.statusText.text))\n  })\n\n  watch(\n    () => vehicleStore.mode,\n    () => alertStore.pushAlert(new Alert(AlertLevel.Info, `Vehicle mode changed to ${vehicleStore.mode}.`))\n  )\n\n  watch(\n    () => vehicleStore.isArmed,\n    (isArmedNow) => {\n      const state = isArmedNow ? 'armed' : 'disarmed'\n      alertStore.pushAlert(new Alert(AlertLevel.Info, `Vehicle ${state}`))\n    }\n  )\n\n  watch(\n    () => vehicleStore.isVehicleOnline,\n    (isOnlineNow) => {\n      const alertLevel = isOnlineNow ? AlertLevel.Success : AlertLevel.Error\n      const alertMessage = isOnlineNow ? 'connected' : 'disconnected'\n      alertStore.pushAlert(new Alert(alertLevel, `Vehicle ${alertMessage}`))\n    }\n  )\n})\n","<template>\n  <div class=\"mx-1 my-1.5 w-[500px]\">\n    <div\n      ref=\"currentAlertBar\"\n      class=\"flex items-center justify-between p-1 overflow-hidden rounded cursor-pointer select-none whitespace-nowrap bg-slate-800/75\"\n    >\n      <p class=\"mx-1 overflow-hidden text-xl font-medium text-gray-100 text-ellipsis\">{{ currentAlert.message }}</p>\n      <div class=\"flex flex-col justify-center mx-1 font-mono text-xs font-semibold leading-3 text-right text-gray-100\">\n        <p>{{ formattedDate(currentAlert.time_created || new Date()) }}</p>\n        <p>{{ currentAlert.level.toUpperCase() }}</p>\n      </div>\n    </div>\n    <div\n      ref=\"expandedAlertsBar\"\n      class=\"expanded-alerts-bar absolute w-full p-2 transition-all rounded top-12 max-h-[30vh] overflow-y-auto text-slate-50 scrollbar-hide bg-slate-800/75 select-none flex flex-col\"\n      :class=\"{ 'opacity-0 invisible': !isShowingExpandedAlerts }\"\n    >\n      <div v-for=\"(alert, i) in sortedAlertsReversed\" :key=\"alert.time_created.toISOString()\">\n        <div :title=\"alert.message\" class=\"flex items-center justify-between whitespace-nowrap\">\n          <p class=\"mx-1 overflow-hidden text-lg font-medium leading-none text-ellipsis\">{{ alert.message }}</p>\n          <div\n            class=\"flex flex-col justify-center mx-1 font-mono text-xs font-semibold leading-3 text-right text-gray-100\"\n          >\n            <p>{{ formattedDate(alert.time_created || new Date()) }}</p>\n            <p>{{ alert.level.toUpperCase() }}</p>\n          </div>\n        </div>\n        <div v-if=\"i !== alertStore.alerts.length - 1\" class=\"h-px mx-1 mb-2 bg-slate-50/30\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { useElementHover, useTimestamp, useToggle } from '@vueuse/core'\nimport { differenceInSeconds, format } from 'date-fns'\nimport { computed, onMounted, onUnmounted, ref, watch } from 'vue'\n\nimport { useAlertStore } from '@/stores/alert'\nimport { useVehicleAlerterStore } from '@/stores/vehicleAlerter'\nimport { Alert, AlertLevel } from '@/types/alert'\n\nuseVehicleAlerterStore()\nconst alertStore = useAlertStore()\nconst timeNow = useTimestamp({ interval: 1000 })\nconst alertPersistencyInterval = 10 // in seconds\n\nconst formattedDate = (datetime: Date): string => format(datetime, 'HH:mm:ss')\n\nconst currentAlert = ref(alertStore.alerts[0])\n\n// eslint-disable-next-line no-undef\nlet currentAlertInterval: NodeJS.Timer | undefined = undefined\nonMounted(() => {\n  currentAlertInterval = setInterval(() => {\n    const dateNow = new Date(timeNow.value)\n    const secsSinceLastAlert = differenceInSeconds(dateNow, alertStore.alerts.last()?.time_created || dateNow)\n    if (secsSinceLastAlert > alertPersistencyInterval) {\n      currentAlert.value = new Alert(AlertLevel.Info, 'No recent alerts.')\n      return\n    }\n    currentAlert.value = alertStore.alerts.last()!\n  }, 1000)\n})\n\nonUnmounted(() => {\n  clearInterval(currentAlertInterval)\n})\n\nconst [isShowingExpandedAlerts, toggleExpandedAlerts] = useToggle()\n\nconst currentAlertBar = ref()\nconst isCurrentAlertBarHovered = useElementHover(currentAlertBar)\nconst expandedAlertsBar = ref()\nconst isExpandedAlertsBarHovered = useElementHover(expandedAlertsBar)\nwatch(isCurrentAlertBarHovered, (isHovered, wasHovered) => {\n  if (wasHovered && !isHovered) {\n    setTimeout(() => {\n      if (!isExpandedAlertsBarHovered.value && !isCurrentAlertBarHovered.value && isShowingExpandedAlerts.value) {\n        toggleExpandedAlerts()\n      }\n    }, 250)\n  }\n  if (isShowingExpandedAlerts.value) return\n  toggleExpandedAlerts()\n})\nwatch(isExpandedAlertsBarHovered, (isHovering, wasHovering) => {\n  if (!(wasHovering && !isHovering)) return\n  toggleExpandedAlerts()\n})\n\nconst sortedAlertsReversed = computed(() => {\n  // We copy the sortedAlerts list before reversing it, otherwise the reverse function, which\n  // is performed in-place, will mutate the original list, and be sorted again, and mutate, and\n  // sort, in an infinite loop that will crash the app.\n  return [...alertStore.sortedAlerts].reverse()\n})\n</script>\n\n<style scoped>\n.expanded-alerts-bar[invisible] {\n  display: none;\n}\n</style>\n"],"names":["useVehicleAlerterStore","defineStore","vehicleStore","useMainVehicleStore","alertStore","useAlertStore","watch","Alert","AlertLevel","isArmedNow","state","isOnlineNow","alertLevel","alertMessage","alertPersistencyInterval","timeNow","useTimestamp","formattedDate","datetime","format","currentAlert","ref","currentAlertInterval","onMounted","dateNow","differenceInSeconds","_a","onUnmounted","isShowingExpandedAlerts","toggleExpandedAlerts","useToggle","currentAlertBar","isCurrentAlertBarHovered","useElementHover","expandedAlertsBar","isExpandedAlertsBarHovered","isHovered","wasHovered","isHovering","wasHovering","sortedAlertsReversed","computed"],"mappings":"ghBAOa,MAAAA,EAAyBC,EAAY,kBAAmB,IAAM,CACzE,MAAMC,EAAeC,IACfC,EAAaC,IAEbC,EAAAJ,EAAa,WAAY,IAAM,CAC9BA,EAAa,WAAW,MAClBE,EAAA,UAAU,IAAIG,EAAML,EAAa,WAAW,SAAUA,EAAa,WAAW,IAAI,CAAC,CAAA,CAC/F,EAEDI,EACE,IAAMJ,EAAa,KACnB,IAAME,EAAW,UAAU,IAAIG,EAAMC,EAAW,KAAM,2BAA2BN,EAAa,IAAI,GAAG,CAAC,CAAA,EAGxGI,EACE,IAAMJ,EAAa,QAClBO,GAAe,CACR,MAAAC,EAAQD,EAAa,QAAU,WAC1BL,EAAA,UAAU,IAAIG,EAAMC,EAAW,KAAM,WAAWE,CAAK,EAAE,CAAC,CACrE,CAAA,EAGFJ,EACE,IAAMJ,EAAa,gBAClBS,GAAgB,CACf,MAAMC,EAAaD,EAAcH,EAAW,QAAUA,EAAW,MAC3DK,EAAeF,EAAc,YAAc,eACjDP,EAAW,UAAU,IAAIG,EAAMK,EAAY,WAAWC,CAAY,EAAE,CAAC,CACvE,CAAA,CAEJ,CAAC,meCQKC,EAA2B,kCAHVd,IACvB,MAAMI,EAAaC,IACbU,EAAUC,EAAa,CAAE,SAAU,GAAM,CAAA,EAGzCC,EAAiBC,GAA2BC,EAAOD,EAAU,UAAU,EAEvEE,EAAeC,EAAIjB,EAAW,OAAO,CAAC,CAAC,EAG7C,IAAIkB,EACJC,EAAU,IAAM,CACdD,EAAuB,YAAY,IAAM,OACvC,MAAME,EAAU,IAAI,KAAKT,EAAQ,KAAK,EAEtC,GAD2BU,EAAoBD,IAASE,EAAAtB,EAAW,OAAO,KAAK,IAAvB,YAAAsB,EAA0B,eAAgBF,CAAO,EAChFV,EAA0B,CACjDM,EAAa,MAAQ,IAAIb,EAAMC,EAAW,KAAM,mBAAmB,EACnE,MACF,CACaY,EAAA,MAAQhB,EAAW,OAAO,KAAK,GAC3C,GAAI,CAAA,CACR,EAEDuB,EAAY,IAAM,CAChB,cAAcL,CAAoB,CAAA,CACnC,EAED,KAAM,CAACM,EAAyBC,CAAoB,EAAIC,EAAU,EAE5DC,EAAkBV,IAClBW,EAA2BC,EAAgBF,CAAe,EAC1DG,EAAoBb,IACpBc,EAA6BF,EAAgBC,CAAiB,EAC9D5B,EAAA0B,EAA0B,CAACI,EAAWC,IAAe,CACrDA,GAAc,CAACD,GACjB,WAAW,IAAM,CACX,CAACD,EAA2B,OAAS,CAACH,EAAyB,OAASJ,EAAwB,OAC7EC,KAEtB,GAAG,EAEJ,CAAAD,EAAwB,OACPC,GAAA,CACtB,EACKvB,EAAA6B,EAA4B,CAACG,EAAYC,IAAgB,CACvDA,GAAe,CAACD,GACDT,GAAA,CACtB,EAEK,MAAAW,EAAuBC,EAAS,IAI7B,CAAC,GAAGrC,EAAW,YAAY,EAAE,QAAQ,CAC7C"}