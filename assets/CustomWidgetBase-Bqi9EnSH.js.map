{"version":3,"file":"CustomWidgetBase-Bqi9EnSH.js","sources":["../../src/components/widgets/CustomWidgetBase.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"widgetBase\"\n    class=\"h-full rounded-lg overflow-hidden\"\n    :class=\"[\n      isWrapped ? 'w-[40px]' : 'w-full',\n      isWrapped && wrapDirection === 'left' ? 'ml-0 mr-auto' : '',\n      isWrapped && wrapDirection === 'right' ? 'mr-0 ml-auto' : '',\n    ]\"\n    :width=\"canvasSize.width\"\n    :height=\"canvasSize.height\"\n    :style=\"[\n      interfaceStore.globalGlassMenuStyles,\n      {\n        backgroundColor: `${widget.options.backgroundColor + convertedBackgroundOpacity}`,\n        backdropFilter: `blur(${widget.options.backgroundBlur}px)`,\n      },\n    ]\"\n  >\n    <div class=\"flex flex-col justify-between h-full pa-2 cursor-pointer\">\n      <div class=\"flex justify-between w-full\">\n        <v-icon class=\"cursor-grab opacity-40\" @mousedown=\"enableMovingOnDrag\" @mouseup=\"disableMovingOnDrag\">\n          mdi-drag\n        </v-icon>\n        <div v-if=\"!isWrapped\">\n          <div v-if=\"isEditingWidgetName\">\n            <input\n              ref=\"nameInput\"\n              v-model=\"editedName\"\n              class=\"border-b border-gray-400\"\n              @blur=\"saveName\"\n              @keyup.enter=\"saveName\"\n            />\n          </div>\n          <p\n            v-else\n            class=\"whitespace-nowrap overflow-hidden text-ellipsis\"\n            :style=\"{ maxWidth: `${canvasSize.width * 0.8}px` }\"\n            @dblclick=\"enableEditing\"\n          >\n            {{ widget.name }}\n          </p>\n        </div>\n        <div class=\"flex\">\n          <v-menu v-if=\"widgetStore.editingMode\" theme=\"dark\">\n            <template #activator=\"{ props: buttonProps }\">\n              <v-btn size=\"20\" icon=\"mdi-dots-vertical\" variant=\"text\" v-bind=\"buttonProps\"></v-btn>\n            </template>\n\n            <v-list>\n              <v-list-item @click=\"handleOptionClick('options')\">\n                <v-list-item-title>Options</v-list-item-title>\n              </v-list-item>\n              <v-list-item @click=\"handleOptionClick('save')\">\n                <v-list-item-title>Save</v-list-item-title>\n              </v-list-item>\n              <v-list-item @click=\"handleOptionClick('load')\">\n                <v-list-item-title>Load</v-list-item-title>\n              </v-list-item>\n            </v-list>\n          </v-menu>\n        </div>\n      </div>\n      <div v-if=\"isWrapped\" class=\"flex rotate-[270deg] justify-center whitespace-nowrap\">{{ widget.name }}</div>\n      <div v-show=\"!isWrapped\" class=\"flex justify-center h-full px-3 pt-2 gap-x-2\">\n        <div\n          class=\"flex flex-col justify-center border-[#FFFFFF33] border-dashed rounded-md\"\n          :style=\"{ width: widget.options.columns > 1 ? `${leftColumnWidth}%` : '100%' }\"\n          :class=\"[widgetStore.editingMode ? 'border-[1px]' : 'border-0']\"\n        >\n          <div v-for=\"container in leftContainers\" :key=\"container.name\" class=\"w-full h-full\">\n            <VueDraggable\n              v-model=\"container.elements\"\n              :disabled=\"!widgetStore.editingMode\"\n              :animation=\"150\"\n              group=\"generalGroup\"\n              class=\"flex items-center w-full h-full gap-2 px-2\"\n              :class=\"[wrap ? 'flex-wrap' : '', widgetsAlignment]\"\n              @add=\"(e) => widgetAdded(e, container.name)\"\n              @start=\"showWidgetTrashArea = true\"\n              @end=\"showWidgetTrashArea = false\"\n            >\n              <div\n                v-for=\"miniWidget in container.elements\"\n                :key=\"miniWidget.hash\"\n                :data-widget-hash=\"miniWidget.hash\"\n                class=\"rounded-md w-full\"\n                :class=\"{\n                  'cursor-grab': widgetStore.editingMode,\n                  'bg-slate-400': widgetStore.miniWidgetManagerVars(miniWidget.hash).highlighted,\n                }\"\n              >\n                <MiniWidgetInstantiator :mini-widget=\"miniWidget\" />\n              </div>\n            </VueDraggable>\n          </div>\n        </div>\n        <div\n          v-if=\"widget.options.columns > 1 && widgetStore.editingMode\"\n          class=\"cursor-col-resize w-1 bg-[#FFFFFF22] relative\"\n          @mousedown=\"startResize\"\n        >\n          <div class=\"absolute inset-y-0 -left-1 -right-1\"></div>\n        </div>\n\n        <div\n          v-if=\"widget.options.columns > 1\"\n          class=\"flex flex-col justify-center border-[#FFFFFF33] border-dashed rounded-md\"\n          :style=\"{ width: `${100 - leftColumnWidth}%` }\"\n          :class=\"[widgetStore.editingMode ? 'border-[1px]' : 'border-0']\"\n        >\n          <div v-for=\"container in rightContainers\" :key=\"container.name\" class=\"w-full h-full\">\n            <VueDraggable\n              v-model=\"container.elements\"\n              :disabled=\"!widgetStore.editingMode\"\n              :animation=\"150\"\n              group=\"generalGroup\"\n              class=\"flex items-center w-full h-full gap-2 px-2\"\n              :class=\"[wrap ? 'flex-wrap' : '', widgetsAlignment]\"\n              @add=\"(e) => widgetAdded(e, container.name)\"\n              @start=\"showWidgetTrashArea = true\"\n              @end=\"showWidgetTrashArea = false\"\n            >\n              <div\n                v-for=\"element in container.elements\"\n                :key=\"element.hash\"\n                :data-widget-hash=\"element.hash\"\n                class=\"rounded-md w-full\"\n                :class=\"{\n                  'cursor-grab': widgetStore.editingMode,\n                  'bg-slate-400': widgetStore.miniWidgetManagerVars(element.hash).highlighted,\n                }\"\n              >\n                <MiniWidgetInstantiator :mini-widget=\"element\" />\n              </div>\n            </VueDraggable>\n          </div>\n        </div>\n      </div>\n      <div />\n      <v-btn\n        v-if=\"!widgetStore.editingMode\"\n        :class=\"['fixed bottom-[2px]', wrapDirection === 'left' ? 'left-[2px]' : 'right-[2px]']\"\n        :icon=\"wrapChevronIcon\"\n        variant=\"text\"\n        size=\"36\"\n        @click=\"isWrapped = !isWrapped\"\n      />\n    </div>\n  </div>\n\n  <Teleport to=\"body\">\n    <GlassModal :is-visible=\"widgetStore.widgetManagerVars(widget.hash).configMenuOpen\">\n      <v-card class=\"px-8 pb-6 pt-2 rounded-lg w-[400px] bg-transparent\">\n        <v-card-title class=\"text-center -mt-1\">Custom Widget options</v-card-title>\n        <v-btn\n          class=\"absolute top-3 right-0 text-lg rounded-full\"\n          variant=\"text\"\n          size=\"small\"\n          @click=\"widgetStore.widgetManagerVars(widget.hash).configMenuOpen = false\"\n        >\n          <v-icon>mdi-close</v-icon>\n        </v-btn>\n        <div class=\"flex flex-col justify-start items-start gap-x-4 mt-3 w-full\">\n          <p class=\"text-start\">Name:</p>\n          <v-text-field ref=\"nameInput\" v-model=\"widget.name\" density=\"compact\" class=\"w-3/4\" />\n          <p class=\"text-start\">Columns:</p>\n          <v-text-field\n            ref=\"nameInput\"\n            v-model=\"widget.options.columns\"\n            min=\"1\"\n            max=\"2\"\n            type=\"number\"\n            density=\"compact\"\n            class=\"w-1/4\"\n          />\n          <p class=\"mt-1\">Background color</p>\n          <input v-model=\"widget.options.backgroundColor\" type=\"color\" class=\"p-0 w-20 mr-4\" />\n          <p class=\"mt-3\">Background opacity:</p>\n          <v-slider v-model=\"widget.options.backgroundOpacity\" min=\"0\" max=\"1\" color=\"white\" thumb-label width=\"250\" />\n          <p class=\"mt-3\">Background blur:</p>\n          <v-slider v-model=\"widget.options.backgroundBlur\" min=\"0\" max=\"100\" color=\"white\" thumb-label width=\"250\" />\n        </div>\n      </v-card>\n    </GlassModal>\n    <Transition>\n      <div\n        v-if=\"showWidgetTrashArea\"\n        ref=\"widgetTrashArea\"\n        class=\"absolute w-32 h-32 -translate-x-32 -translate-y-32 bottom-[20%] left-1/3 bg-[#FF000055] z-[65] rounded-xl flex items-center justify-center hover:bg-slate-200/50 transition-all\"\n      >\n        <div class=\"relative flex justify-center items-center w-full h-full\">\n          <FontAwesomeIcon\n            icon=\"fa-solid fa-trash\"\n            class=\"absolute h-16 transition-all -translate-x-7 -translate-y-8 top-1/2 left-1/2 text-white\"\n          />\n          <VueDraggable\n            v-model=\"trashList\"\n            :animation=\"150\"\n            group=\"generalGroup\"\n            class=\"flex flex-wrap items-center justify-center w-full h-full gap-2\"\n            @add=\"handleDeleteWidget\"\n          >\n            <div v-for=\"miniWidget in trashList\" :key=\"miniWidget.hash\">\n              <div class=\"select-none\">\n                <MiniWidgetInstantiator :mini-widget=\"miniWidget\" />\n              </div>\n            </div>\n          </VueDraggable>\n        </div>\n      </div>\n    </Transition>\n  </Teleport>\n</template>\n\n<script setup lang=\"ts\">\nimport { useWindowSize } from '@vueuse/core'\nimport saveAs from 'file-saver'\nimport type SortableEvent from 'sortablejs'\nimport { v4 as uuid } from 'uuid'\nimport { computed, nextTick, onBeforeMount, onMounted, ref, toRefs, watch } from 'vue'\nimport { VueDraggable } from 'vue-draggable-plus'\n\nimport { useSnackbar } from '@/composables/snackbar'\nimport { useAppInterfaceStore } from '@/stores/appInterface'\nimport { useWidgetManagerStore } from '@/stores/widgetManager'\nimport { CustomWidget, CustomWidgetElement, CustomWidgetElementContainer, MiniWidget, Widget } from '@/types/widgets'\n\nimport GlassModal from '../GlassModal.vue'\nimport MiniWidgetInstantiator from '../MiniWidgetInstantiator.vue'\n\nconst widgetStore = useWidgetManagerStore()\nconst interfaceStore = useAppInterfaceStore()\nconst { showSnackbar } = useSnackbar()\n\nconst props = defineProps<{\n  /**\n   * Widget instance\n   */\n  widget: CustomWidget\n}>()\nconst widget = toRefs(props).widget\n\nconst currentWidget = ref<Widget>(props.widget)\nconst lastKnownHashes = ref(new Map<string, string[]>())\nconst wrap = ref(false)\nconst widgetsAlignment = ref('justify-center')\nconst isMenuOpen = ref(false)\nconst isEditingWidgetName = ref(false)\nconst editedName = ref(props.widget.name)\nconst nameInput = ref<HTMLInputElement | null>(null)\nconst leftColumnWidth = ref(props.widget.options.leftColumnWidth || 50)\nconst isDragging = ref(false)\nconst widgetBase = ref<HTMLElement | null>(null)\nconst isWrapped = ref(false)\nconst wrapDirection = ref<'left' | 'right'>('right')\nconst trashList = ref<MiniWidget[] | CustomWidgetElement[]>([])\n\nconst updateWrapDirection = (): void => {\n  if (widgetBase.value) {\n    const widgetRect = widgetBase.value.getBoundingClientRect()\n    const screenWidth = window.innerWidth\n    const widgetCenterX = widgetRect.left + widgetRect.width / 2\n\n    if (widgetCenterX < screenWidth / 2) {\n      wrapDirection.value = 'left'\n    } else {\n      wrapDirection.value = 'right'\n    }\n  }\n}\n\nconst wrapChevronIcon = computed(() => {\n  if (wrapDirection.value === 'left') {\n    return isWrapped.value ? 'mdi-chevron-right' : 'mdi-chevron-left'\n  } else {\n    return isWrapped.value ? 'mdi-chevron-left' : 'mdi-chevron-right'\n  }\n})\n\nconst enableEditing = (): void => {\n  editedName.value = props.widget.name\n  isEditingWidgetName.value = true\n\n  nextTick(() => {\n    if (nameInput.value) {\n      nameInput.value.focus()\n      nameInput.value.select()\n    }\n  })\n}\n\nconst saveName = (): void => {\n  isEditingWidgetName.value = false\n  if (currentWidget.value && editedName.value !== currentWidget.value.name) {\n    currentWidget.value.name = editedName.value\n  }\n}\n\nconst loadWidget = (event: Event): void => {\n  const file = (event.target as HTMLInputElement).files?.[0]\n  if (!file) {\n    showSnackbar({ variant: 'error', message: 'No file selected.', duration: 3000 })\n    return\n  }\n\n  const reader = new FileReader()\n  reader.onload = (e) => {\n    try {\n      const loadedWidget = JSON.parse(e.target?.result as string) as Widget\n      const hash = currentWidget.value.hash\n      widgetStore.loadWidgetFromFile(hash, loadedWidget)\n    } catch (error) {\n      showSnackbar({ variant: 'error', message: 'Invalid widget file format.', duration: 3000 })\n    }\n  }\n\n  reader.readAsText(file)\n}\n\nconst showWidgetTrashArea = ref(false)\n\nconst handleDeleteWidget = (): void => {\n  widgetStore.elementToShowOnDrawer = undefined\n  trashList.value = []\n}\n\nconst handleOptionClick = (option: string): void => {\n  isMenuOpen.value = false\n  if (option === 'options') {\n    widgetStore.widgetManagerVars(currentWidget.value.hash).configMenuOpen = true\n  } else if (option === 'save') {\n    downloadWidget()\n  } else if (option === 'load') {\n    const input = document.createElement('input')\n    input.type = 'file'\n    input.accept = '.widget'\n\n    input.addEventListener('change', (event: Event) => {\n      loadWidget(event)\n    })\n\n    input.click()\n  }\n}\n\nconst downloadWidget = (): void => {\n  const blob = new Blob([JSON.stringify(widget.value)], { type: 'application/json;charset=utf-8' })\n  const fileName = `${widget.value.name}.widget`\n  saveAs(blob, fileName)\n}\n\nconst startResize = (event: MouseEvent): void => {\n  if (!widgetStore.editingMode) return\n\n  const startX = event.clientX\n  const startWidth = leftColumnWidth.value\n  isDragging.value = true\n\n  const doDrag = (e: MouseEvent): void => {\n    if (!widgetBase.value) return\n    const containerWidth = widgetBase.value.offsetWidth\n    const newWidth = startWidth + ((e.clientX - startX) / containerWidth) * 100\n    leftColumnWidth.value = Math.max(10, Math.min(90, newWidth))\n  }\n\n  const stopDrag = (): void => {\n    isDragging.value = false\n    document.removeEventListener('mousemove', doDrag)\n    document.removeEventListener('mouseup', stopDrag)\n  }\n\n  document.addEventListener('mousemove', doDrag)\n  document.addEventListener('mouseup', stopDrag)\n}\n\nconst leftContainers = computed(() =>\n  currentWidget.value.options.elementContainers.filter((container: CustomWidgetElementContainer) =>\n    container.name.includes('left')\n  )\n)\nconst rightContainers = computed(() =>\n  currentWidget.value.options.elementContainers.filter((container: CustomWidgetElementContainer) =>\n    container.name.includes('right')\n  )\n)\n\nconst convertedBackgroundOpacity = computed(() => Math.round(widget.value.options.backgroundOpacity * 255).toString(16))\n\nconst enableMovingOnDrag = (): void => {\n  widgetStore.allowMovingAndResizing(currentWidget.value.hash, true)\n  window.addEventListener('mouseup', disableMovingOnDrag)\n  window.addEventListener('dragend', disableMovingOnDrag)\n}\n\nconst disableMovingOnDrag = (): void => {\n  updateWrapDirection()\n  widgetStore.allowMovingAndResizing(currentWidget.value.hash, false)\n  window.removeEventListener('mouseup', disableMovingOnDrag)\n  window.removeEventListener('dragend', disableMovingOnDrag)\n}\n\nconst widgetAdded = (e: SortableEvent.SortableEvent, containerName: string): void => {\n  const container = currentWidget.value.options.elementContainers.find(\n    (innerContainer: CustomWidgetElementContainer) => innerContainer.name === containerName\n  )\n  if (!container) return\n\n  const currentHashes = container.elements.map((element: CustomWidgetElement) => element.hash)\n  const previousHashes = lastKnownHashes.value.get(containerName) || []\n  const newHash = currentHashes.find((hash: string) => !previousHashes.includes(hash))\n\n  if (newHash) {\n    const newWidget = container.elements.find((element: CustomWidgetElement) => element.hash === newHash)\n    if (newWidget && e.pullMode === 'clone') {\n      newWidget.hash = uuid()\n      widgetStore.miniWidgetManagerVars(newWidget.hash).configMenuOpen = true\n    }\n    widgetStore.showElementPropsDrawer(newWidget.hash)\n    lastKnownHashes.value.set(containerName, currentHashes)\n  }\n}\n\nconst { width: windowWidth } = useWindowSize()\nconst canvasSize = computed(() => ({\n  width: currentWidget.value.size.width * windowWidth.value,\n  height: currentWidget.value.size.height * windowWidth.value,\n}))\n\nconst containerRef = ref<HTMLElement | null>(null)\n\nwatch(\n  () => widgetStore.editingMode,\n  (newValue) => {\n    if (newValue === true) {\n      disableMovingOnDrag()\n      isWrapped.value = false\n    }\n  }\n)\n\nconst loadWidgetFromStore = (): void => {\n  try {\n    const loadedWidget = widgetStore.editWidgetByHash(props.widget.hash)\n    if (loadedWidget) {\n      currentWidget.value = loadedWidget\n    }\n  } catch (error) {\n    showSnackbar({ variant: 'warning', message: 'Error reading widget file.', duration: 1000 })\n  }\n}\n\nonBeforeMount(() => {\n  props.widget.options.elementContainers.forEach((container: CustomWidgetElementContainer) => {\n    lastKnownHashes.value.set(\n      container.name,\n      container.elements.map((w) => w.hash)\n    )\n  })\n})\n\nonMounted(() => {\n  updateWrapDirection()\n  window.addEventListener('resize', updateWrapDirection)\n  containerRef.value = document.querySelector('.main')\n  loadWidgetFromStore()\n  disableMovingOnDrag()\n})\n</script>\n\n<style scoped>\n.cursor-col-resize {\n  cursor: col-resize;\n}\n\n.cursor-col-resize:hover,\n.cursor-col-resize:active {\n  background-color: #ffffff55;\n}\n</style>\n"],"names":["widgetStore","useWidgetManagerStore","interfaceStore","useAppInterfaceStore","showSnackbar","useSnackbar","props","__props","widget","toRefs","currentWidget","ref","lastKnownHashes","wrap","widgetsAlignment","isMenuOpen","isEditingWidgetName","editedName","nameInput","leftColumnWidth","isDragging","widgetBase","isWrapped","wrapDirection","trashList","updateWrapDirection","widgetRect","screenWidth","wrapChevronIcon","computed","enableEditing","nextTick","saveName","loadWidget","event","file","_a","reader","e","loadedWidget","hash","showWidgetTrashArea","handleDeleteWidget","handleOptionClick","option","downloadWidget","input","blob","fileName","saveAs","startResize","startX","startWidth","doDrag","containerWidth","newWidth","stopDrag","leftContainers","container","rightContainers","convertedBackgroundOpacity","enableMovingOnDrag","disableMovingOnDrag","widgetAdded","containerName","innerContainer","currentHashes","element","previousHashes","newHash","newWidget","uuid","windowWidth","useWindowSize","canvasSize","containerRef","watch","newValue","loadWidgetFromStore","onBeforeMount","w","onMounted"],"mappings":"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"}