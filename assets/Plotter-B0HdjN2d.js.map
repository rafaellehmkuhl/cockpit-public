{"version":3,"file":"Plotter-B0HdjN2d.js","sources":["../../node_modules/vuetify/lib/components/VGrid/VCol.mjs","../../node_modules/vuetify/lib/components/VGrid/VRow.mjs","../../src/components/widgets/Plotter.vue"],"sourcesContent":["// Styles\nimport \"./VGrid.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { breakpoints } from \"../../composables/display.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { capitalize, computed, h } from 'vue';\nimport { genericComponent, propsFactory } from \"../../util/index.mjs\"; // Types\nconst breakpointProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    props[val] = {\n      type: [Boolean, String, Number],\n      default: false\n    };\n    return props;\n  }, {});\n})();\nconst offsetProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const offsetKey = 'offset' + capitalize(val);\n    props[offsetKey] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\nconst orderProps = (() => {\n  return breakpoints.reduce((props, val) => {\n    const orderKey = 'order' + capitalize(val);\n    props[orderKey] = {\n      type: [String, Number],\n      default: null\n    };\n    return props;\n  }, {});\n})();\nconst propMap = {\n  col: Object.keys(breakpointProps),\n  offset: Object.keys(offsetProps),\n  order: Object.keys(orderProps)\n};\nfunction breakpointClass(type, prop, val) {\n  let className = type;\n  if (val == null || val === false) {\n    return undefined;\n  }\n  if (prop) {\n    const breakpoint = prop.replace(type, '');\n    className += `-${breakpoint}`;\n  }\n  if (type === 'col') {\n    className = 'v-' + className;\n  }\n  // Handling the boolean style prop when accepting [Boolean, String, Number]\n  // means Vue will not convert <v-col sm></v-col> to sm: true for us.\n  // Since the default is false, an empty string indicates the prop's presence.\n  if (type === 'col' && (val === '' || val === true)) {\n    // .v-col-md\n    return className.toLowerCase();\n  }\n  // .order-md-6\n  className += `-${val}`;\n  return className.toLowerCase();\n}\nconst ALIGN_SELF_VALUES = ['auto', 'start', 'end', 'center', 'baseline', 'stretch'];\nexport const makeVColProps = propsFactory({\n  cols: {\n    type: [Boolean, String, Number],\n    default: false\n  },\n  ...breakpointProps,\n  offset: {\n    type: [String, Number],\n    default: null\n  },\n  ...offsetProps,\n  order: {\n    type: [String, Number],\n    default: null\n  },\n  ...orderProps,\n  alignSelf: {\n    type: String,\n    default: null,\n    validator: str => ALIGN_SELF_VALUES.includes(str)\n  },\n  ...makeComponentProps(),\n  ...makeTagProps()\n}, 'VCol');\nexport const VCol = genericComponent()({\n  name: 'VCol',\n  props: makeVColProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const classes = computed(() => {\n      const classList = [];\n\n      // Loop through `col`, `offset`, `order` breakpoint props\n      let type;\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value = props[prop];\n          const className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n      const hasColClasses = classList.some(className => className.startsWith('v-col-'));\n      classList.push({\n        // Default to .v-col if no other col-{bp}-* classes generated nor `cols` specified.\n        'v-col': !hasColClasses || !props.cols,\n        [`v-col-${props.cols}`]: props.cols,\n        [`offset-${props.offset}`]: props.offset,\n        [`order-${props.order}`]: props.order,\n        [`align-self-${props.alignSelf}`]: props.alignSelf\n      });\n      return classList;\n    });\n    return () => h(props.tag, {\n      class: [classes.value, props.class],\n      style: props.style\n    }, slots.default?.());\n  }\n});\n//# sourceMappingURL=VCol.mjs.map","// Styles\nimport \"./VGrid.css\";\n\n// Composables\nimport { makeComponentProps } from \"../../composables/component.mjs\";\nimport { breakpoints } from \"../../composables/display.mjs\";\nimport { makeTagProps } from \"../../composables/tag.mjs\"; // Utilities\nimport { capitalize, computed, h } from 'vue';\nimport { genericComponent, propsFactory } from \"../../util/index.mjs\"; // Types\nconst ALIGNMENT = ['start', 'end', 'center'];\nconst SPACE = ['space-between', 'space-around', 'space-evenly'];\nfunction makeRowProps(prefix, def) {\n  return breakpoints.reduce((props, val) => {\n    const prefixKey = prefix + capitalize(val);\n    props[prefixKey] = def();\n    return props;\n  }, {});\n}\nconst ALIGN_VALUES = [...ALIGNMENT, 'baseline', 'stretch'];\nconst alignValidator = str => ALIGN_VALUES.includes(str);\nconst alignProps = makeRowProps('align', () => ({\n  type: String,\n  default: null,\n  validator: alignValidator\n}));\nconst JUSTIFY_VALUES = [...ALIGNMENT, ...SPACE];\nconst justifyValidator = str => JUSTIFY_VALUES.includes(str);\nconst justifyProps = makeRowProps('justify', () => ({\n  type: String,\n  default: null,\n  validator: justifyValidator\n}));\nconst ALIGN_CONTENT_VALUES = [...ALIGNMENT, ...SPACE, 'stretch'];\nconst alignContentValidator = str => ALIGN_CONTENT_VALUES.includes(str);\nconst alignContentProps = makeRowProps('alignContent', () => ({\n  type: String,\n  default: null,\n  validator: alignContentValidator\n}));\nconst propMap = {\n  align: Object.keys(alignProps),\n  justify: Object.keys(justifyProps),\n  alignContent: Object.keys(alignContentProps)\n};\nconst classMap = {\n  align: 'align',\n  justify: 'justify',\n  alignContent: 'align-content'\n};\nfunction breakpointClass(type, prop, val) {\n  let className = classMap[type];\n  if (val == null) {\n    return undefined;\n  }\n  if (prop) {\n    // alignSm -> Sm\n    const breakpoint = prop.replace(type, '');\n    className += `-${breakpoint}`;\n  }\n  // .align-items-sm-center\n  className += `-${val}`;\n  return className.toLowerCase();\n}\nexport const makeVRowProps = propsFactory({\n  dense: Boolean,\n  noGutters: Boolean,\n  align: {\n    type: String,\n    default: null,\n    validator: alignValidator\n  },\n  ...alignProps,\n  justify: {\n    type: String,\n    default: null,\n    validator: justifyValidator\n  },\n  ...justifyProps,\n  alignContent: {\n    type: String,\n    default: null,\n    validator: alignContentValidator\n  },\n  ...alignContentProps,\n  ...makeComponentProps(),\n  ...makeTagProps()\n}, 'VRow');\nexport const VRow = genericComponent()({\n  name: 'VRow',\n  props: makeVRowProps(),\n  setup(props, _ref) {\n    let {\n      slots\n    } = _ref;\n    const classes = computed(() => {\n      const classList = [];\n\n      // Loop through `align`, `justify`, `alignContent` breakpoint props\n      let type;\n      for (type in propMap) {\n        propMap[type].forEach(prop => {\n          const value = props[prop];\n          const className = breakpointClass(type, prop, value);\n          if (className) classList.push(className);\n        });\n      }\n      classList.push({\n        'v-row--no-gutters': props.noGutters,\n        'v-row--dense': props.dense,\n        [`align-${props.align}`]: props.align,\n        [`justify-${props.justify}`]: props.justify,\n        [`align-content-${props.alignContent}`]: props.alignContent\n      });\n      return classList;\n    });\n    return () => h(props.tag, {\n      class: ['v-row', classes.value, props.class],\n      style: props.style\n    }, slots.default?.());\n  }\n});\n//# sourceMappingURL=VRow.mjs.map","<template>\n  <p\n    v-if=\"!widget.options.dataLakeVariableId\"\n    class=\"w-full h-full flex items-center justify-center text-center text-white text-h5 font-weight-bold p-4 overflow-hidden\"\n  >\n    Please open the Plotter widget configuration menu to select a variable to be plotted.\n  </p>\n  <div v-else class=\"main\">\n    <canvas ref=\"canvasRef\" :width=\"canvasSize.width\" :height=\"canvasSize.height\" />\n  </div>\n  <InteractionDialog\n    v-model=\"widgetStore.widgetManagerVars(widget.hash).configMenuOpen\"\n    :title=\"`Plotter config`\"\n    variant=\"text-only\"\n  >\n    <template #content>\n      <!-- Data source section -->\n      <v-row>\n        <v-col cols=\"12\">\n          <div class=\"text-subtitle-1 font-weight-medium mb-4\">Data Source</div>\n          <div class=\"ml-2\">\n            <v-select\n              v-model=\"widget.options.dataLakeVariableId\"\n              :items=\"availableDataLakeVariables\"\n              item-title=\"name\"\n              item-value=\"id\"\n              label=\"Data Lake variable\"\n              hint=\"Select a variable to be plotted\"\n              persistent-hint\n              variant=\"outlined\"\n              density=\"comfortable\"\n            />\n          </div>\n        </v-col>\n      </v-row>\n\n      <!-- Appearance section -->\n      <v-row>\n        <v-col cols=\"12\">\n          <div class=\"text-subtitle-1 font-weight-medium mb-2\">Appearance</div>\n          <div class=\"ml-2 flex gap-x-8\">\n            <v-menu :close-on-content-click=\"false\">\n              <template #activator=\"{ props: colorPickerActivatorProps }\">\n                <div v-bind=\"colorPickerActivatorProps\" class=\"flex cursor-pointer\">\n                  <span class=\"mt-1\">Background color</span>\n                  <div\n                    class=\"w-[30px] h-[30px] border-2 border-slate-700 rounded-lg cursor-pointer ml-2\"\n                    :style=\"{ backgroundColor: widget.options.backgroundColor }\"\n                  ></div>\n                </div>\n              </template>\n              <v-card class=\"overflow-hidden\" :style=\"interfaceStore.globalGlassMenuStyles\">\n                <v-color-picker v-model=\"widget.options.backgroundColor\" label=\"Background\" hide-inputs />\n              </v-card>\n            </v-menu>\n            <v-menu :close-on-content-click=\"false\">\n              <template #activator=\"{ props: colorPickerActivatorProps }\">\n                <div v-bind=\"colorPickerActivatorProps\" class=\"flex cursor-pointer\">\n                  <span class=\"mt-1\">Line color</span>\n                  <div\n                    class=\"w-[30px] h-[30px] border-2 border-slate-700 rounded-lg cursor-pointer ml-2\"\n                    :style=\"{ backgroundColor: widget.options.lineColor }\"\n                  ></div>\n                </div>\n              </template>\n              <v-card class=\"overflow-hidden\" :style=\"interfaceStore.globalGlassMenuStyles\">\n                <v-color-picker v-model=\"widget.options.lineColor\" label=\"Line\" hide-inputs />\n              </v-card>\n            </v-menu>\n            <v-text-field\n              v-model.number=\"widget.options.lineThickness\"\n              type=\"number\"\n              label=\"Line thickness\"\n              variant=\"outlined\"\n              density=\"compact\"\n              :rules=\"[(v: number) => v > 0 || 'Must be greater than 0']\"\n              width=\"140px\"\n              hide-details\n            />\n          </div>\n        </v-col>\n      </v-row>\n\n      <!-- Data points section -->\n      <v-row>\n        <v-col cols=\"12\">\n          <div class=\"text-subtitle-1 font-weight-medium mb-2\">Data Points</div>\n          <div class=\"ml-2 flex gap-x-8\">\n            <v-checkbox v-model=\"widget.options.limitSamples\" label=\"Limit number of samples\" />\n            <v-text-field\n              v-model.number=\"widget.options.maxSamples\"\n              type=\"number\"\n              label=\"Maximum samples\"\n              variant=\"outlined\"\n              density=\"comfortable\"\n              :disabled=\"!widget.options.limitSamples\"\n              :rules=\"[(v: number) => v > 0 || 'Must be greater than 0']\"\n              hint=\"Higher values will show more history but may impact performance\"\n              width=\"220px\"\n            />\n          </div>\n        </v-col>\n      </v-row>\n    </template>\n    <template #actions>\n      <div class=\"flex w-full justify-end my-2\">\n        <v-btn @click=\"widgetStore.widgetManagerVars(widget.hash).configMenuOpen = false\">Close</v-btn>\n      </div>\n    </template>\n  </InteractionDialog>\n</template>\n\n<script setup lang=\"ts\">\nimport { useElementVisibility, useWindowSize } from '@vueuse/core'\nimport { computed, nextTick, onBeforeMount, onMounted, ref, toRefs, watch } from 'vue'\n\nimport {\n  DataLakeVariable,\n  getAllDataLakeVariablesInfo,\n  listenDataLakeVariable,\n  unlistenDataLakeVariable,\n} from '@/libs/actions/data-lake'\nimport { resetCanvas } from '@/libs/utils'\nimport { useAppInterfaceStore } from '@/stores/appInterface'\nimport { useWidgetManagerStore } from '@/stores/widgetManager'\nimport type { Widget } from '@/types/widgets'\n\nimport InteractionDialog from '../InteractionDialog.vue'\nconst interfaceStore = useAppInterfaceStore()\n\nconst widgetStore = useWidgetManagerStore()\n\nconst props = defineProps<{\n  /**\n   * Widget reference\n   */\n  widget: Widget\n}>()\nconst widget = toRefs(props).widget\nconst availableDataLakeVariables = ref<DataLakeVariable[]>([])\nlet listenerId: string | undefined\n\nonBeforeMount(() => {\n  // Set initial widget options if they don't exist\n  if (Object.keys(widget.value.options).length === 0) {\n    widget.value.options = {\n      backgroundColor: 'rgba(0, 0, 0, 0.7)',\n      lineColor: 'rgba(255, 0, 0, 1.0)',\n      dataLakeVariableId: undefined,\n      maxSamples: 1000,\n      limitSamples: true,\n      lineThickness: 1,\n    }\n  }\n})\n\nonMounted(() => {\n  changeDataLakeVariable(widget.value.options.dataLakeVariableId)\n  availableDataLakeVariables.value = Object.values(getAllDataLakeVariablesInfo()).filter(\n    (variable) => variable.type === 'number'\n  )\n})\n\n// Remove the oldest sample if the number of samples is greater than the max samples\n// Use shift if the number of samples is exactly the max samples + 1 for performance reasons\nconst cutExtraSamples = (): void => {\n  if (widget.value.options.limitSamples) {\n    if (valuesHistory.length === widget.value.options.maxSamples + 1) {\n      valuesHistory.shift()\n    } else if (valuesHistory.length > widget.value.options.maxSamples) {\n      valuesHistory.splice(0, valuesHistory.length - widget.value.options.maxSamples)\n    }\n  }\n}\n\nconst changeDataLakeVariable = (newId: string, oldId?: string): void => {\n  if (newId === undefined) {\n    console.error('No data lake variable ID provided!')\n    return\n  }\n\n  if (oldId !== undefined && listenerId) {\n    unlistenDataLakeVariable(oldId, listenerId)\n  }\n\n  listenerId = listenDataLakeVariable(newId, (value) => {\n    valuesHistory.push(value as number)\n\n    cutExtraSamples()\n    renderCanvas()\n  })\n}\n\nwatch([widget.value.options.maxSamples, widget.value.options.limitSamples], () => {\n  cutExtraSamples()\n  renderCanvas()\n})\n\nwatch(\n  () => widget.value.options.dataLakeVariableId,\n  (newId, oldId) => {\n    changeDataLakeVariable(newId, oldId)\n    valuesHistory.length = 0\n  }\n)\n\n// Make canvas size follows window resizing\nconst { width: windowWidth, height: windowHeight } = useWindowSize()\nconst canvasSize = computed(() => ({\n  width: widget.value.size.width * windowWidth.value,\n  height: widget.value.size.height * windowHeight.value,\n}))\n\nconst canvasRef = ref<HTMLCanvasElement | undefined>()\nconst canvasContext = ref()\n\nconst drawText = (ctx: CanvasRenderingContext2D, text: string, x: number, y: number): void => {\n  // Add a semi-transparent background for better readability\n  const metrics = ctx.measureText(text)\n  const padding = 4\n  ctx.fillStyle = 'rgba(0, 0, 0, 0.5)'\n  ctx.fillRect(\n    x - padding,\n    y - 16 - padding, // 16 is approx. font height\n    metrics.width + padding * 2,\n    16 + padding * 2\n  )\n\n  // Draw the text\n  ctx.fillStyle = widget.value.options.lineColor\n  ctx.fillText(text, x, y)\n}\n\nconst renderCanvas = (): void => {\n  if (canvasRef.value === undefined || canvasRef.value === null) return\n  if (canvasContext.value === undefined) {\n    console.debug('Canvas context undefined!')\n    canvasContext.value = canvasRef.value.getContext('2d')\n    return\n  }\n  const ctx = canvasContext.value\n  const canvasWidth = canvasSize.value.width\n  const canvasHeight = canvasSize.value.height\n  resetCanvas(ctx)\n\n  ctx.clearRect(0, 0, canvasWidth, canvasHeight)\n  ctx.fillStyle = widget.value.options.backgroundColor\n  ctx.fillRect(0, 0, canvasWidth, canvasHeight)\n  ctx.strokeStyle = widget.value.options.lineColor\n  ctx.lineWidth = Math.max(widget.value.options.lineThickness, 1)\n\n  try {\n    if (valuesHistory.length === 0) return\n\n    maxValue = Math.max(...valuesHistory)\n    minValue = Math.min(...valuesHistory)\n    const currentValue = valuesHistory[valuesHistory.length - 1]\n\n    // Draw the graph\n    ctx.beginPath()\n    ctx.moveTo(0, canvasHeight)\n\n    valuesHistory.forEach((sample, index) => {\n      const x = index * (canvasWidth / valuesHistory.length)\n      const y = canvasHeight - ((sample - minValue) / (maxValue - minValue)) * canvasHeight\n      ctx.lineTo(x, y)\n    })\n    ctx.stroke()\n\n    // Setup text rendering\n    ctx.font = '14px monospace'\n    ctx.textBaseline = 'bottom'\n\n    // Draw the values\n    drawText(ctx, `Current: ${Number(currentValue).toFixed(2)}`, 10, canvasHeight - 10)\n    drawText(ctx, `Min: ${Number(minValue).toFixed(2)}`, 10, canvasHeight - 30)\n    drawText(ctx, `Max: ${Number(maxValue).toFixed(2)}`, 10, canvasHeight - 50)\n  } catch (error) {\n    console.error('Error drawing graph:', error)\n  }\n}\n\nconst valuesHistory: number[] = []\nlet maxValue = 0\nlet minValue = 0\n\n// Update canvas whenever reference variables changes\nwatch([canvasSize, widget.value.options], () => {\n  if (!widgetStore.isWidgetVisible(widget.value)) return\n  nextTick(() => renderCanvas())\n})\n\nconst canvasVisible = useElementVisibility(canvasRef)\nwatch(canvasVisible, (isVisible, wasVisible) => {\n  if (isVisible && !wasVisible) renderCanvas()\n})\n</script>\n\n<style scoped>\n.main {\n  width: 100%;\n  height: 100%;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  position: relative;\n  min-width: 150px;\n  min-height: 200px;\n}\n</style>\n"],"names":["breakpointProps","breakpoints","props","val","offsetProps","offsetKey","capitalize","orderProps","orderKey","propMap","breakpointClass","type","prop","className","breakpoint","ALIGN_SELF_VALUES","makeVColProps","propsFactory","str","makeComponentProps","makeTagProps","VCol","genericComponent","_ref","slots","classes","computed","classList","value","hasColClasses","h","_a","ALIGNMENT","SPACE","makeRowProps","prefix","def","prefixKey","ALIGN_VALUES","alignValidator","alignProps","JUSTIFY_VALUES","justifyValidator","justifyProps","ALIGN_CONTENT_VALUES","alignContentValidator","alignContentProps","classMap","makeVRowProps","VRow","interfaceStore","useAppInterfaceStore","widgetStore","useWidgetManagerStore","widget","toRefs","__props","availableDataLakeVariables","ref","listenerId","onBeforeMount","onMounted","changeDataLakeVariable","getAllDataLakeVariablesInfo","variable","cutExtraSamples","valuesHistory","newId","oldId","unlistenDataLakeVariable","listenDataLakeVariable","renderCanvas","watch","windowWidth","windowHeight","useWindowSize","canvasSize","canvasRef","canvasContext","drawText","ctx","text","x","y","metrics","padding","canvasWidth","canvasHeight","resetCanvas","maxValue","minValue","currentValue","sample","index","error","nextTick","canvasVisible","useElementVisibility","isVisible","wasVisible"],"mappings":"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","x_google_ignoreList":[0,1]}