import{c as l,M as r,Y as u,u as i,r as c,w as m,o as f,h as b,l as p,m as g,H as v,q as w,am as _}from"./index-BuIQHwnx.js";(function(){try{var a=typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{},e=new a.Error().stack;e&&(a._sentryDebugIds=a._sentryDebugIds||{},a._sentryDebugIds[e]="0e2a534c-19b4-444f-b652-8cbdcdb861d7",a._sentryDebugIdIdentifier="sentry-dbid-0e2a534c-19b4-444f-b652-8cbdcdb861d7")}catch{}})();const h=l({__name:"ModeSelector",setup(a){r.registerUsage(u.mode);const e=i(),o=c();m(o,t=>{if(o.value!==void 0){if(t===e.mode){console.log("New mode is the same as the current one. No mode-change commands will be issued.");return}e.setFlightMode(o.value)}});let n;return f(()=>n=setInterval(()=>o.value=e.mode,500)),b(()=>clearInterval(n)),(t,d)=>(p(),g("div",null,[v(_,{modelValue:o.value,"onUpdate:modelValue":d[0]||(d[0]=s=>o.value=s),options:w(e).modesAvailable(),class:"min-w-[128px]"},null,8,["modelValue","options"])]))}});export{h as default};
//# sourceMappingURL=ModeSelector-DRnrSEiR.js.map
