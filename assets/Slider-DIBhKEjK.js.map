{"version":3,"file":"Slider-DIBhKEjK.js","sources":["../../src/components/custom-widget-elements/Slider.vue"],"sourcesContent":["<template>\n  <div\n    class=\"slider-container\"\n    :class=\"\n      widgetStore.elementToShowOnDrawer?.hash === miniWidget.hash && widgetStore.editingMode\n        ? 'bg-[#00000010] '\n        : 'border-0'\n    \"\n    @click=\"widgetStore.editingMode && widgetStore.showElementPropsDrawer(miniWidget.hash)\"\n  >\n    <div :style=\"{ minWidth: miniWidget.options.layout?.labelWidth + 'px' }\">\n      <p v-if=\"miniWidget.options.layout?.label !== ''\" class=\"mr-3 mb-[3px]\">\n        {{ miniWidget.options.layout?.label }}\n      </p>\n    </div>\n    <v-slider\n      v-model=\"sliderValue\"\n      :min=\"miniWidget.options.layout?.minValue\"\n      :max=\"miniWidget.options.layout?.maxValue\"\n      :thumb-label=\"miniWidget.options.layout?.showTooltip\"\n      hide-details\n      class=\"min-w-20\"\n      :color=\"miniWidget.options.layout?.color || 'white'\"\n      :class=\"{\n        'pointer-events-none': widgetStore.editingMode,\n        'scale-75': miniWidget.options.layout?.size === 'small',\n      }\"\n      @update:model-value=\"handleSliderChange\"\n    ></v-slider>\n  </div>\n</template>\n\n<script setup lang=\"ts\">\nimport { toRefs } from '@vueuse/core'\nimport { onMounted, onUnmounted, ref, watch } from 'vue'\n\nimport {\n  deleteDataLakeVariable,\n  listenDataLakeVariable,\n  setDataLakeVariableData,\n  unlistenDataLakeVariable,\n} from '@/libs/actions/data-lake'\nimport { useWidgetManagerStore } from '@/stores/widgetManager'\nimport { CustomWidgetElementOptions, CustomWidgetElementType } from '@/types/widgets'\n\nconst widgetStore = useWidgetManagerStore()\n\nconst props = defineProps<{\n  /**\n   * Element instance\n   */\n  miniWidget: CustomWidgetElementOptions[CustomWidgetElementType.Slider]\n}>()\n\nconst miniWidget = toRefs(props).miniWidget\n\nconst sliderValue = ref(0)\nlet listenerId: string | undefined\n\nwatch(\n  () => widgetStore.miniWidgetManagerVars(miniWidget.value.hash).configMenuOpen,\n  (newValue) => {\n    if (newValue === true) {\n      widgetStore.showElementPropsDrawer(miniWidget.value.hash)\n      setTimeout(() => {\n        widgetStore.miniWidgetManagerVars(miniWidget.value.hash).configMenuOpen = false\n      }, 200)\n    }\n  },\n  { immediate: true, deep: true }\n)\n\nconst handleSliderChange = (): void => {\n  if (widgetStore.editingMode) return\n  if (miniWidget.value.options.dataLakeVariable) {\n    widgetStore.setMiniWidgetLastValue(miniWidget.value.hash, sliderValue.value.toFixed(1))\n    setDataLakeVariableData(miniWidget.value.options.dataLakeVariable.name, sliderValue.value.toFixed(1))\n  }\n}\n\nonMounted(() => {\n  if (!miniWidget.value.options || Object.keys(miniWidget.value.options).length === 0) {\n    miniWidget.value.isCustomElement = true\n    widgetStore.updateElementOptions(miniWidget.value.hash, {\n      layout: {\n        label: '',\n        minValue: 0,\n        maxValue: 100,\n        showTooltip: true,\n        color: '#FFFFFF',\n        labelWidth: miniWidget.value.options.layout?.labelWidth || 0,\n      },\n      variableType: 'number',\n      dataLakeVariable: undefined,\n    })\n  }\n  if (miniWidget.value.options.dataLakeVariable) {\n    listenerId = listenDataLakeVariable(miniWidget.value.options.dataLakeVariable?.name, (value) => {\n      sliderValue.value = value as number\n    })\n    sliderValue.value = widgetStore.getMiniWidgetLastValue(miniWidget.value.hash) as number\n  }\n})\n\nonUnmounted(() => {\n  if (miniWidget.value.options.dataLakeVariable) {\n    deleteDataLakeVariable(miniWidget.value.options.dataLakeVariable.id)\n    if (listenerId) {\n      unlistenDataLakeVariable(miniWidget.value.options.dataLakeVariable.name, listenerId)\n    }\n  }\n})\n</script>\n\n<style scoped>\n.slider-container {\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: row;\n}\n\n.label-top {\n  margin-bottom: 8px;\n}\n\n.label-bottom {\n  margin-top: 8px;\n}\n\n.label-left {\n  order: -1;\n  margin-right: 16px;\n}\n\n.label-right {\n  margin-left: 16px;\n  order: 1;\n}\n\n.slider-container.row {\n  flex-direction: row; /* Horizontal layout for left/right labels */\n}\n</style>\n"],"names":["widgetStore","useWidgetManagerStore","miniWidget","toRefs","__props","sliderValue","ref","listenerId","watch","newValue","handleSliderChange","setDataLakeVariableData","onMounted","_a","listenDataLakeVariable","_b","value","onUnmounted","deleteDataLakeVariable","unlistenDataLakeVariable"],"mappings":"olBA6CA,MAAMA,EAAcC,EAAsB,EASpCC,EAAaC,EAPLC,CAOiB,EAAE,WAE3BC,EAAcC,EAAI,CAAC,EACrB,IAAAC,EAEJC,EACE,IAAMR,EAAY,sBAAsBE,EAAW,MAAM,IAAI,EAAE,eAC9DO,GAAa,CACRA,IAAa,KACHT,EAAA,uBAAuBE,EAAW,MAAM,IAAI,EACxD,WAAW,IAAM,CACfF,EAAY,sBAAsBE,EAAW,MAAM,IAAI,EAAE,eAAiB,IACzE,GAAG,EAEV,EACA,CAAE,UAAW,GAAM,KAAM,EAAK,CAChC,EAEA,MAAMQ,EAAqB,IAAY,CACjCV,EAAY,aACZE,EAAW,MAAM,QAAQ,mBACfF,EAAA,uBAAuBE,EAAW,MAAM,KAAMG,EAAY,MAAM,QAAQ,CAAC,CAAC,EAC9DM,EAAAT,EAAW,MAAM,QAAQ,iBAAiB,KAAMG,EAAY,MAAM,QAAQ,CAAC,CAAC,EAExG,EAEA,OAAAO,EAAU,IAAM,UACV,CAACV,EAAW,MAAM,SAAW,OAAO,KAAKA,EAAW,MAAM,OAAO,EAAE,SAAW,KAChFA,EAAW,MAAM,gBAAkB,GACvBF,EAAA,qBAAqBE,EAAW,MAAM,KAAM,CACtD,OAAQ,CACN,MAAO,GACP,SAAU,EACV,SAAU,IACV,YAAa,GACb,MAAO,UACP,aAAYW,EAAAX,EAAW,MAAM,QAAQ,SAAzB,YAAAW,EAAiC,aAAc,CAC7D,EACA,aAAc,SACd,iBAAkB,MAAA,CACnB,GAECX,EAAW,MAAM,QAAQ,mBAC3BK,EAAaO,GAAuBC,EAAAb,EAAW,MAAM,QAAQ,mBAAzB,YAAAa,EAA2C,KAAOC,GAAU,CAC9FX,EAAY,MAAQW,CAAA,CACrB,EACDX,EAAY,MAAQL,EAAY,uBAAuBE,EAAW,MAAM,IAAI,EAC9E,CACD,EAEDe,EAAY,IAAM,CACZf,EAAW,MAAM,QAAQ,mBAC3BgB,EAAuBhB,EAAW,MAAM,QAAQ,iBAAiB,EAAE,EAC/DK,GACFY,EAAyBjB,EAAW,MAAM,QAAQ,iBAAiB,KAAMK,CAAU,EAEvF,CACD"}